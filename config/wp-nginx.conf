# WordPress Nginx Configuration

server {
    listen 80;
    server_name _;
    
    # --- SECURITY SETTINGS ---
    # Hide nginx version
    server_tokens off;
    
    # Security related response headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    add_header Permissions-Policy "geolocation=none, microphone=none, camera=none, payment=none" always;
 
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.google-analytics.com https://*.googletagmanager.com; img-src 'self' data: https://*.google-analytics.com https://*.googletagmanager.com; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'" always;
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to wp-content/uploads directory PHP files
    location ~* /(?:uploads|files|wp-content|wp-includes)/.*\.php$ {
        deny all;
    }
    
    # Protect WordPress config file
    location ~* wp-config.php {
        deny all;
    }
    
    # Protect WordPress debug log
    location ~* debug\.log {
        deny all;
    }
    
    # Protect WordPress XML-RPC (uncomment if not needed)
    location = /xmlrpc.php {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Protect WordPress install/upgrade files
    location ~* wp-admin/includes {
        deny all;
    }
    
    location ~* wp-includes/theme-compat/ {
        deny all;
    }
    
    location ~* wp-includes/js/tinymce/langs/.*\.php {
        deny all;
    }
    
    # Disable PHP execution in uploads directory
    location ~* /uploads/.*\.(?:php|phar|pl|py|jsp|asp|htm|html|shtml|sh|cgi)$ {
        deny all;
    }
    
    # Disable PHP execution in wp-content directory
    location ~* /wp-content/.*\.(?:php|phar|pl|py|jsp|asp|htm|html|shtml|sh|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    root /var/www/html;
    index index.php;
    
    # Client body size limit
    client_max_body_size 20m;

    location / {
        try_files $uri $uri/ /index.php?$args;
        
        # Block user enumeration
        if ($args ~* "^/?author=([0-9]*)") {
            return 403;
        }
    }

    location ~ \.php$ {
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI security settings
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 300;
        fastcgi_intercept_errors on;
        
        # Mitigate https://httpoxy.org/ vulnerabilities
        fastcgi_param HTTP_PROXY "";
    }

    # Image file cache 1 month
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        expires 30d;
        add_header Cache-Control "public";
        log_not_found off;
        access_log off;
    }

    # CSS and JS file cache 1 week
    location ~* \.(css|js)$ {
        expires 7d;
        add_header Cache-Control "public";
        log_not_found off;
        access_log off;
    }

    # Font file cache 1 month
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public";
        log_not_found off;
        access_log off;
    }

    # HTML and data file short-term cache
    location ~* \.(html|xml|json)$ {
        expires 2h;
        add_header Cache-Control "public";
    }
    
    # Deny access to backup and source files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|old|orig|backup)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
} 