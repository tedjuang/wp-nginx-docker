version: "3.8"

services:
  nginx:
    image: nginx:1.25
    container_name: wordpress_nginx
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./config/wp-nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - VIRTUAL_HOST=${WP_DOMAIN}
      - LETSENCRYPT_HOST=${WP_DOMAIN}
    depends_on:
      - wordpress
    networks:
      - frontend
      - backend
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx-proxy:
    image: nginxproxy/nginx-proxy:0.9.3
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - conf.d:/etc/nginx/conf.d
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - DEFAULT_HOST=${WP_DOMAIN}
    restart: always
    networks:
      - frontend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3

  letsencrypt:
    image: nginxproxy/acme-companion:2.2
    container_name: letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${SSL_EMAIL}
    depends_on:
      - nginx-proxy
    restart: always
    networks:
      - frontend

  wordpress:
    image: wordpress:6.4.2-php8.2-fpm
    container_name: wordpress
    volumes:
      - wordpress_data:/var/www/html
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/php.ini:ro
    environment:
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_USER=${WP_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASS}
      - WORDPRESS_DB_NAME=${WP_DB_NAME}
      - VIRTUAL_HOST=${WP_DOMAIN}
      - LETSENCRYPT_HOST=${WP_DOMAIN}
      - WORDPRESS_TABLE_PREFIX=${WP_TABLE_PREFIX:-wp_}
    depends_on:
      - mysql
    restart: always
    networks:
      - frontend
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    mem_limit: 1g

  mysql:
    image: mariadb:10.11.5
    container_name: mysql
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_DATABASE=${WP_DB_NAME}
      - MYSQL_USER=${WP_DB_USER}
      - MYSQL_PASSWORD=${WP_DB_PASS}
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    restart: always
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_ROOT_PASS}",
        ]
      interval: 20s
      timeout: 10s
      retries: 3
    mem_limit: 1g

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - VIRTUAL_HOST=${PMA_DOMAIN}
      - LETSENCRYPT_HOST=${PMA_DOMAIN}
      - PMA_ABSOLUTE_URI=https://${PMA_DOMAIN}
      - UPLOAD_LIMIT=100M
    depends_on:
      - mysql
    restart: always
    networks:
      - frontend
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    mem_limit: 512m

  # 备份服务 - 生产环境
  backup:
    image: debian:bullseye-slim
    container_name: backup
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=${WP_DB_USER}
      - MYSQL_PASSWORD=${WP_DB_PASS}
      - MYSQL_DATABASE=${WP_DB_NAME}
      - BACKUP_DIR=/backups
    command: ["/bin/bash", "-c", "chmod +x /backup.sh && /backup.sh"]
    networks:
      - backend
    depends_on:
      - mysql
      - wordpress
    restart: "no"

networks:
  frontend:
  backend:

volumes:
  certs:
  vhost.d:
  html:
  conf.d:
  acme:
  wordpress_data:
  db_data: 